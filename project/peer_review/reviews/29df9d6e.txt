Reviewer 1:
7
-main.go inneholder god og oversiktlig informasjon om klasser og go-routines, men vi tenker at funksjoner som "updateElevatorsOnlineFromHeartbeat" burde ligge i en separat fil for å øke oversiktlighet
-Samle og starte go-routines/channels på samme sted i main, hvorfor er en prosess primary og de andre ikke?
-funksjoner blir litt "gjemt", f.eks. kalles "initElevator", men siden dere har de fleste filene med samme package navn vet man ikke hvor funksjonen er implementert. 
-"requets.go" har et lite intuituvt navn. Det er ikke mulig å skjønne funksjonalitet før man ser på koden. Det samme gjelder "assigner" og "distributor", det virker som at de har samme funksjonalitet
-Dere definerer flere variabler både som global variabel og som lokal variabel. f.eks. definerers "numFloors" minst 3 steder. Trenger kun 1 definisjon
-Dere har ogå flere main funksjoner, hvorfor? Kan være mer intuitivt å bytte navn
-Selv om struktur og flyt totalt sett blir litt lite intuitivt for oss, er mange funksjoner intuitive med en god implementasjon

Reviewer 2:
8
The project is broken into distinct modules (assigner, distributor, elevator, elevator_io, main, requests, singleElevator, timer, and udp), which is a solid approach to separate concerns. However, some modules (notably distributor and distributorFSM) appear unfinished and need further refinement to fully realize their intended functionality. “UpdateElevatorsOnline” and “UpdateElevatorsOnlineFromHeartbeat” should also probably be moved out of main.go and into more fitting modules.
The code makes good use of channels and a state machine (especially in the singleElevator and main modules) to manage concurrent events and hardware interactions. 
Basic error handling is in place (for example, in the assigner and UDP modules), yet there are areas where errors are only printed rather than handled. Improving error recovery and logging would enhance the overall resilience of the system.
The use of descriptive naming for variables and functions makes the code mostly understandable. That said, some parts like incomplete function signatures and commented-out code in the distributor module detract from overall clarity and would benefit from cleanup and refactoring.
While naming is generally clear, inconsistencies exist across modules such as unexported functions like newDistributer and channel names like helloTx lack descriptiveness. Adopting a more uniform naming style that aligns would help improve maintainability.
Many functions are self-explanatory, but complex logic in state transitions and network interactions would be easier to follow with more in-depth comments. Additional overall documentation or a README explaining module interactions would be very helpful.
The project demonstrates a good foundational design for managing elevator operations in a networked environment. With some additional work on polishing incomplete modules and enhancing error handling, the code would be more scalable and easier to maintain over time.

Reviewer 3:
8
1 The code needs to be altered in several Places if one wants to add more than 3 elevators and 4 floors. Consider adding a config file where all of these variables are kept and called when used in the program. Now everything is explicitly stated With a value each time. Which could cause issues and difficulty to maintain the code.This is also the case for other config variables.
2 Consider changing the default UDP-ports used in the handout code in order to avoid receiving Messages from other Groups that uses these default ports.
3 The Three functions defined below the main loop should be moved to a different file. This will make Your program more readable and scalable. 
4 Dont understand the for loop at the bottom of distribution it is not inside a function and is not being run, maybe misplaced?
5 Why is there a separate main loop in the assigner.go file?
6 The code is relatively easy to follow and has a logical flow. It has its flaws but it is certainly on the right track of what we, with our Limited understanding, view as a good solution.  
7 The grade 8 is given because the code is reasonable but increasing the size of this project could prove difficult due to the feedback given above.

Reviewer 4:
8
- First thing that appears is that your filesystem does not align with its levels. I.e. it seems to me that you have not thought trough your modules properly.
- Each function in distributor.go is easy to understand -good.
- In your Main-file it is quite easy to understand what you have planned is going to happen.
- However your main file might contain functionality that could be distributed to other moduls. I.e. even though your code is quite clean it might make your code in the main file unmaintainable as it increases in size.
- Single elevator-file is tidy.
- You have comment that you need to make a gorutine in main that handles which elevator has the newest update, however I would consider having this in another file/module together with some other of the code in main. This might help you keep an good overview throughout the process.
- In my opinion you have good thoughts on how you are supposed to solve the communication task.

