Reviewer 1:
7
Lacking additional documentation beyond comments made in code.
Commented out lines of code, like in UpdateElevatorHallRequests(), making it in general harder to read.
Implementing an external program for the assignment of hall request seems like a smart idea, so that you can avoid doing it directly in go which might be suboptimal for this purpose?
Elevator states seem to be represented by integers, but there doesn't seem to be any documentation anywhere about which states these integers represent. The general lack of defining the exact purpose of some elements makes everything quite hard to read.
Heartbeat mechanism ensures good fault tolerance.
Code base is generally well structured with a good peer-to-peer approach for communication and separation between networking, states and logic. However, the sheer quantity of files across many folders may make everything more difficult and tedious to navigate.

Reviewer 2:
9
- The project has good modularity: separated configuration, logic, and communication
- Naming of variables and functions is good
- Several functions mix multiple responsibilities like controlling movement, updating lights, managing state, which I would split into smaller, testable units
- Overall, I think the team has a solid approach

